//KC03N08Z JOB ,'George Zhylin' ,MSGCLASS=H                             0
//STEP1   EXEC PGM=ASSIST                                               0
//STEPLIB   DD DSN=KC02293.ASSIST.LOADLIB,DISP=SHR                      0
//SYSPRINT  DD SYSOUT=*                                                 0
//SYSIN     DD *                                                        0
*********************************************************************** 0
*  PROGRAM ASSIGNMENT6                                                * 0
*                                                                     * 0
*  NAME:     GEORGE ZHYLIN Z1810327                                   * 0
*                                                                     * 0
*  FUNCTION: PROGRAM READS CUSTOMER INFO FROM THE RECORD, SRORES THEM * 0
*            THE TABLE, ALL THE ITEMS UP TO THE DELIMITER.THEN PROGRAM* 0
*            DISPLAYS ALL THE ENTRYS IN THE TABLE. AFTER THAT PROGRAM * 0
*            READS ALL THE TRANSACTIONS AFTER DELIMITER AND SEARCHES  * 0
*            THE TABLE TO FIND THE CUSTOMER DATA AND TO PROCESS IT.   * 0
*            AFTER THIS, CUSTOMER TABLE DISPLAYED AGAIN DISPLAYING THE* 0
*            CHANGES.                                                 * 0
*  SUBROUTINES:  MAIN, BUILD, PRINT, TRANS                            * 0
*                                                                     * 0
*                                                                     * 0
*                                                                     * 0
*                                                                     * 0
*  INPUT:    28 LINES WITH 4 ROWS OF CUSTOMER DATA,                   * 0
*            THEN 29 LINES 4 ROWS OF TRANSACTIONS                     * 0
*                                                                     * 0
*  OUTPUT:  TABLE OF CUSTOMERS, LIST OF TRANSACTIONS, AND CUST TABLE  * 0
*                                                                     * 0
*                                                                     * 0
*                                                                     * 0
*                                                                     * 0
*  REGISTER USAGE:                                                    * 0
*  R1  = USED TO LOAD ARGUMENTS                                       * 0
*  R2  =                                                              * 0
*  R3  =                                                              * 0
*  R4  =                                                              * 0
*  R5  =                                                              * 0
*  R6  =                                                              * 0
*  R7  =                                                              * 0
*  R8  =                                                              * 0
*  R9  =                                                              * 0
*  R10 =                                                              * 0
*  R11 =                                                              * 0
*  R12 =                                                              * 0
*  R13 =                                                              * 0
*  R14 = EXIT                                                         * 0
*  R15 = USED TO CALL ROUTINE                                         * 0
*********************************************************************** 0
***<DSECT FOR INPUT FILE>***                                            0
INPUT     DSECT                    INPUT DSECT                          0
INFIRST   DS    CL10               FIRST NAME                           0
          DS    CL2                SPACE                                0
INLAST    DS    CL10               LAST NAME                            0
          DS    CL2                SPACE                                0
INID      DS    CL8                ID                                   0
          DS    CL2                SPACE                                0
INBAL     DS    ZL7                BALANCE                              0
INSIGN    DS    CL1                SIGN                                 0
***<DSECT 2 FOR INPUT FILE>***                                          0
INPUT2    DSECT                    INPUT 2 DSECT TOTAL 32BYTE           0
IN2ID     DS    CL8                ID                                   0
          DS    CL2                SPACE                                0
IN2TR     DS    CL1                TRANSACTION TYPE                     0
          DS    CL2                SPACE                                0
IN2PAY    DS    ZL7                PAYMENT AMOUNT                       0
          DS    CL2                SPACE                                0
IN2DAY    DS    ZL8                DATE  DDMMYYYY                       0
          DS    CL2                SPACE                                0
***<DSECT FOR TABLE>***                                                 0
TABLEM    DSECT                    TABLE DSECT                          0
FIRSTN    DS    CL10               FIRST NAME                           0
LASTN     DS    CL10               LAST NAME                            0
ID        DS    CL8                ID                                   0
BAL       DS    PL4                BALANCE                              0
SIGN      DS    CL1                SIGN                                 0
***<MAIN ROUTINE>***                                                    0
MAIN      CSECT                    MAIN ROUTINE                         0
***<STANDARD ENTRY LINKAGE>***                                          0
          STM   14,12,12(13)       SAVE ALL THE REGISTERS EXCEPT R13    0
          LR    12,15              PUT ADDRESS OF ROUTINE IN R12        0
          USING MAIN,12            SET R12 AS A BASE REGISTER FOR ROUT  0
          LA    14,SAVEMAIN        SET POINTER TO ROUTINE SAVE AREA     0
          ST    13,4(14)           BACKWARD POINTER                     0
          ST    14,8(13)           FORWARD POINTER                      0
          LR    13,14              SET POINTER IN R13 TO ROUTINE        0
***<MAIN ROUTINE BODY>***                                               0
          LA    1,BLIST            LOAD BUILD ARGUMENTS IN R1           0
          L     15,=V(BUILD)       GET ADDRESS OF BUILD ROUTINE         0
          BALR  14,15              CALL BUILD ROUTINE                   0
          LA    1,PLIST            LOAD PRINT ARGUMENTS IN R1           0
          L     15,=V(PRINT)       GET ADDRESS OF PRINT ROUTINE         0
          BALR  14,15              CALL PRINT ROUTINE                   0
          LA    1,TLIST            LOAD TRANS ARGUMENTS IN R1           0
          L     15,=V(TRANS)       GET ADDRESS OF TRANS ROUTINE         0
          BALR  14,15              CALL TRANS ROUTINE                   0
          LA    1,PLIST            LOAD PRINT ARGUMENTS IN R1           0
          L     15,=V(PRINT)       GET ADDRESS OF PRINT ROUTINE         0
          BALR  14,15              CALL PRINT ROUTINE                   0
***<STANDARD EXIT LINKAGE>***                                           0
          L     13,4(13)           SET R13 TO CALLERS SAVE AREA         0
          LM    14,12,12(13)       LOAD BACK ALL REGISTERS EXEPT R13    0
          BR    14                 EXIT                                 0
          LTORG                                                         0
***<STORAGE FOR MAIN ROUTINE>***                                        0
TABLE     DS    27CL33             TABLE                                0
EOT       DS    F                  ADDRESS OF END OF TABLE              0
RECORD    DS    80C                BUFFER                               0
TABLEINF  DC    C'-First Name           Last Name             '         0
          DC    C'ID Number                Balance'                     0
PAGENUM   DC    PL2'0'             PAGE NUMBER                          0
SAVEMAIN  DS    18F                MAIN ROUTINE SAVE AREA               0
BLIST     DC    A(TABLE)           ARGUMENTS FOR BUILD ROUTINE          0
          DC    A(EOT)                                                  0
          DC    A(RECORD)                                               0
PLIST     DC    A(TABLE)           ARGUMENTS FOR PRINT ROUTINE          0
          DC    A(EOT)                                                  0
          DC    A(TABLEINF)                                             0
          DC    A(PAGENUM)                                              0
TLIST     DC    A(TABLE)           ARGUMENTS FOR TRANS ROUTINE          0
          DC    A(EOT)                                                  0
          DC    A(RECORD)                                               0
          DC    A(PAGENUM)                                              0
*********************************************************************** 0
*                          BUILD ROUTINE                              * 0
*  NAME:     GEORGE ZHYLIN Z1810327                                   * 0
*                                                                     * 0
*  FUNCTION: ROUTINE GETS TABLE,EOT,RECORD POINTERS AS ARGUMENTS, NEXT* 0
*            ROUTINE GOES THRU STANDARD ENTRY LINKAGE. TRY'S TO READ  * 0
*            FIRST RECORD, IF DELIMITER 'STOPHERE' FOUND THEN GOES TO * 0
*            THE END. MOVES,UNPACKS AND CONVERTS ENTRYS FROM THE INPUT* 0
*            TO THE TABLE ACCORDING TO THE SPECIFIED DSECT'S.         * 0
*            ROUTINE STORES THE POINTERS AND GOES THRU STANDARD EXIT  * 0
*            LINKAGE.                                                 * 0
*  REGISTER USAGE:                                                    * 0
*  R1  = ARGUMENTS                                                    * 0
*  R2  =                                                              * 0
*  R3  = POINTER TO THE TABLE                                         * 0
*  R4  = POINTER TO THE EOT                                           * 0
*  R5  = POINTER TO THE RECORD(BUFFER)                                * 0
*  R6  = POINTER TO THE END OF THE TABLE                              * 0
*  R7  = COPY OF THE TABLE POINTER                                    * 0
*  R8  = RECORD VARIABLE                                              * 0
*  R9  =                                                              * 0
*  R10 =                                                              * 0
*  R11 =                                                              * 0
*  R12 = BASE REGISTER                                                * 0
*  R13 =                                                              * 0
*  R14 = EXIT                                                         * 0
*  R15 =                                                              * 0
*********************************************************************** 0
BUILD     CSECT                    BUILD ROUTINE                        0
***<STANDARD ENTRY LINKAGE FOR ROUTINE>***                              0
          STM   14,12,12(13)       SAVE ALL THE REGISTERS EXCEPT R13    0
          LR    12,15              PUT ADDRESS OF ROUT  IN R12          0
          USING BUILD,12           SET R12 AS A BASE REGISTER FOR ROUT  0
          LA    14,SAVEREAD        SET POINTER TO ROUTINE SAVE AREA     0
          ST    13,4(14)           BACKWARD POINTER                     0
          ST    14,8(13)           FORWARD POINTER                      0
          LR    13,14              SET POINTER IN R13 TO ROUTINE        0
***<BUILD ROUTINE BODY>***                                              0
          LM    3,5,0(1)           UNLOAD ARGUMENTS IN R3,R4,R5         0
          LR    7,3                COPY POINTER TO THE BEGINING OF TAB  0
          USING TABLEM,7           USE TABLEM DSECT IN R3               0
          USING INPUT,5            USE INPUT DSECT IN R5                0
          XREAD INPUT,80           READ FIRST RECORD                    0
LOOP1     CLC   INID,=CL8'STOPHERE' CHECK IF END OF DATA                0
          BE    ENDB               IF STOPHERE REACHED, STOP            0
          MVC   FIRSTN,INFIRST     MOVE FIRST NAME TO THE TABLE         0
          MVC   LASTN,INLAST       MOVE LAST NAME TO THE TABLE          0
          MVC   ID,INID            MOVE ID TO THE TABLE                 0
          PACK  BAL,INBAL          PACK AND MOVE BALANCE TO THE TABLE   0
          MVC   SIGN,INSIGN        MOVE SIGN TO THE TABLE               0
          CLC   SIGN,=CL1'+'       CHECK IS SIGN IS POSITIVE            0
          BE    GO                 IF POSITIVE THEN SKIP AND GO TO GO   0
          MP    BAL,=PL1'-1'       IF NEGATIVE SIGN MAKE VALUE NEGATIVE 0
GO        LA    7,33(0,7)          UPDATE THE TABLE POINTRER            0
          XREAD INPUT,80           READ NEXT RECORD                     0
          B     LOOP1              GO BACK TO THE LOOP                  0
ENDB      SR    11,11              IF DELIMITER REACHED THEN STOP       0
          DROP  7,5                DROP USING DSECTS                    0
***<SET POINTERS>***                                                    0
          LR    6,7                STORE POINTER OF EOT TO R6           0
          ST    6,0(4)             PUT EOT POINTER IN EOT VARIABLE      0
***<STANDARD EXIT LINKAGE FOR ROUTINE>***                               0
          L     13,4(13)           SET R13 TO CALLERS SAVE AREA         0
          LM    14,12,12(13)       RESTORE REGISTERS                    0
          BR    14                 EXIT                                 0
          LTORG                                                         0
***<STORAGE FOR BUILD ROUTINE>***                                       0
SAVEREAD  DS    18F                REGISTERS STORAGE                    0
***<END OF BUILD ROUTINE>***                                            0
*********************************************************************** 0
*                           PRINT ROUTINE                             * 0
*  NAME:     GEORGE ZHYLIN Z1810327                                   * 0
*                                                                     * 0
*  FUNCTION: ROUTINE GETS TABLE, EOT, ROWS LBL AND PAGE POINTERS AS   * 0
*            ARGUMENTS,THEN GOES THRU STANDARD ENTRY LINKAGE PROCESS. * 0
*            ROUTINE PRINTS HEADERS WITH PAGE NUM, THEN PRINTS 8 ITEMS* 0
*            PER LINE UNTIL END OF TABLE REACHED. IN THE END, RESULT  * 0
*            LINES PRINTED, ROUTINE GOES THRU STANDARD EXIT LINK      * 0
*                                                                     * 0
*                                                                     * 0
*  REGISTER USAGE:                                                    * 0
*  R1  = ARGUMENTS POINTER                                            * 0
*  R2  =                                                              * 0
*  R3  = TABLE POINTER                                                * 0
*  R4  = EOT POINTER                                                  * 0
*  R5  = TABLE ROW INFO LBL                                           * 0
*  R6  = PAGE COUNTER                                                 * 0
*  R7  = COUNTER FOR ROWS                                             * 0
*  R8  = ITEM COUNTER                                                 * 0
*  R9  =                                                              * 0
*  R10 =                                                              * 0
*  R11 = COPY OF THE POINTER TO THE TABLE                             * 0
*  R12 = BASE REGISTER                                                * 0
*  R13 =                                                              * 0
*  R14 = EXIT                                                         * 0
*  R15 =                                                              * 0
*********************************************************************** 0
PRINT     CSECT                    PRINT ROUTINE                        0
***<STANDARD ENTRY LINKAGE FOR ROUTINE>***                              0
          STM   14,12,12(13)       SAVE ALL THE REGISTERS EXCEPT R13    0
          LR    12,15              PUT ADDRESS OF ROUTINE IN R12        0
          USING PRINT,12           SET R12 AS A BASE REGISTER FOR ROUT  0
          LA    14,SAVEPRNT        SET POINTER TO ROUTINE SAVE AREA     0
          ST    13,4(14)           BACKWARD POINTER                     0
          ST    14,8(13)           FORWARD POINTER                      0
          LR    13,14              SET POINTER IN R13 TO ROUTINE        0
***<PRINT ROUTINE BODY>***                                              0
          LM    3,6,0(1)           UNLOAD ARGUMENTS IN R3,R4,R5,R6      0
          ZAP   CUSTS,=PL4'0'      CLEAR THE FIELD                      0
          ZAP   BALSUM,=PL4'0'     CLEAR THE FIELD                      0
          ZAP   BALAVG,=PL4'0'     CLEAR THE FIELD                      0
          LR    11,3               COPY POINTER TO THE TABLE TO R11     0
          USING TABLEM,11          USE TABLEM DSECT IN R11              0
          LH    7,0(6)             GET PAGE NUM AND PUT 4BYTES IN R7    0
          S     4,=F'1'            PUT CORRECT VALUE FOR EOT            0
          STH   7,PAGEN            STORE 4BYTES PAGE NUM IN PAGEN       0
PRINTP    AP    PAGEN,=PL1'1'      ADD 1 TO OUR PAGE COUNTER            0
          MVC   NUM,=XL4'40202020' FORMAT FOR OUTPUT                    0
          ED    NUM,PAGEN          INSERT PAGE NUMBER IN LABEL          0
          SR    8,8                RESET ITEM COUNTER                   0
          XPRNT =C' ',1            TRIPLE SPACE AS PER INSTRUCTIONS     0
          XPRNT =C' ',1                                                 0
          XPRNT =C' ',1                                                 0
          XPRNT HEADER,80          PRINT HEADERS                        0
          XPRNT 0(5),76            PRINT TABLE TAB INFO                 0
LOOP2     AP    CUSTS,=PL1'1'      ADD 1 TO OUR CUSTOMERS COUNTER       0
          MVC   FN,FIRSTN          INSERT FIRST NAME                    0
          MVC   LN,LASTN           INSERT LAST NAME                     0
          MVC   IDL,ID             INSERT ID                            0
          LA    1,BALL+6           INITIALIZE R1                        0
          MVC   BALL,=XL10'4020206B2021204B2020'        FORMAT          0
          EDMK  BALL,BAL           INSERT IN LABEL                      0
          AP    BALSUM,BAL         ADD CURENT BALANCE TO BAL SUM        0
          BCTR  1,0                SUBSTRACT 1 FROM R1                  0
          MVI   0(1),C'$'          INSERT $                             0
          MVC   SIGNL,=CL2'  '     CLEAR THE FIELD FOR THE + OR - SIGN  0
          CLC   SIGN,=CL1'+'       CHECK IF VALUE IF POISITIVE          0
          BE    DEBIT              IF VALUE IS POSITIVE JUMP TO DEBIT   0
          MVC   SIGNL,=CL2'CR'     IF NEGATIVE THEN INSERT 'CR'         0
DEBIT     XPRNT PRESULT,80         PRINT RESULTS                        0
          A     8,=F'1'            UPDATE THE ITEMS COUNTER             0
          LA    11,33(0,11)        UPDATE THE TABLE POINTER             0
          C     8,=F'5'            CHECK ITEMS COUNTER                  0
          BE    PRINTP             IF 5 ITEMS PRINTP                    0
          CR    11,4               CHECK IF EOT                         0
          BC    B'1010',ENDP       IF EOT GO TO THE ENDP                0
          CR    11,4               GO BACK TO LOOP2                     0
          BC    B'1111',LOOP2                                           0
***<ENDP & FOOTERS>***                                                  0
ENDP      XPRNT =C' ',1            SINGLE SPACE AS PER INSTRUCTIONS     0
          MVC   CUSTNUML,=XL10'40404020202020202020'        FORMAT      0
          ED    CUSTNUML,CUSTS     INSERT IN LABEL                      0
          XPRNT FOOTER1,36         PRINT FOOTER1 NUM OF CUST            0
          LA    1,SUML+6           INITIALIZE R1                        0
          MVC   SUML,=XL10'4020206B2021204B2020'        FORMAT          0
          EDMK  SUML,BALSUM        INSERT IN LABEL                      0
          BCTR  1,0                SUBSTRACT 1 FROM R1                  0
          MVI   0(1),C'$'          INSERT $                             0
          XPRNT FOOTER2,36         PRINT FOOTER2 SUM                    0
          ZAP   BIG,BALSUM         COPY SUM FOR DIVISION                0
          DP    BIG,CUSTS          GET AVG                              0
          ZAP   BALAVG,BIG(4)      COPY QUOTIENT TO THE BALAVG          0
          LA    1,AVGL+6           INITIALIZE R1                        0
          MVC   AVGL,=XL10'4020206B2021204B2020'        FORMAT          0
          EDMK  AVGL,BALAVG        INSERT IN LABEL                      0
          BCTR  1,0                SUBSTRACT 1 FROM R1                  0
          MVI   0(1),C'$'          INSERT $                             0
          XPRNT FOOTER3,36         PRINT FOOTER3 AVG                    0
          LH    9,PAGEN            COPY PAGE COUNTER                    0
          STH   9,0(6)                                                  0
          DROP  12,11              STOP USING DSECTS                    0
***<STANDARD EXIT LINKAGE FOR ROUTINE>***                               0
          L     13,4(13)           SET R13 TO CALLERS SAVE AREA         0
          LM    14,12,12(13)       RESTORE REGISTERS                    0
          BR    14                 EXIT                                 0
          LTORG                                                         0
***<STORAGE FOR PRINT ROUTINE>***                                       0
          DS    F                  TO ALIGN STORAGE                     0
PAGEN     DC    PL2'0'             PACKED VARIABLE TO HOLD PAGE NUMBER  0
CUSTS     DC    PL4'0'             CUSTOMERS COUNTER                    0
BALSUM    DC    PL4'0'             SUM OF ALL THE BALANCES              0
BALAVG    DC    PL4'0'             AVG OF ALL THE BALANCES              0
BIG       DC    PL8'0'             NUM FOR DIVISION                     0
SAVEPRNT  DS    18F                REGISTERS STORAGE                    0
***<TAB INFO>***                                                        0
HEADER    DC    C'1'               CCC                                  0
          DC    C'                      Odds and Ends Customer Data'    0
          DC    C'                      Page'                           0
NUM       DS    CL4                PAGE NUMBER                          0
***<FOOTER LABELS>***                                                   0
FOOTER1   DC    C'-'               CCC                                  0
          DC    C'Number of customers =    '                            0
CUSTNUML  DS    CL10               NUM OF CUSTOMERS                     0
FOOTER2   DC    C'0'               CCC                                  0
          DC    C'Sum of all balances =    '                            0
SUML      DS    CL10               SUM OF ALL SUMMS                     0
FOOTER3   DC    C'0'               CCC                                  0
          DC    C'Average balance =        '                            0
AVGL      DS    CL10               AVG SUM                              0
***<RESULT>***                                                          0
PRESULT   DC    C'0'               CCC                                  0
FN        DS    CL10               FIRST NAME                           0
          DC    C'           '     SAPECE                               0
LN        DS    CL10               LAST NAME                            0
          DC    C'            '    SPACE                                0
IDL       DS    CL8                ID                                   0
          DC    C'               ' SPACE                                0
BALL      DS    CL10               BALANCE                              0
          DC    C' '               SPACE                                0
SIGNL     DC    CL2'  '            SIGN                                 0
***<END OF PRINT ROUTINE>***                                            0
*                                                                       0
*********************************************************************** 0
*                         TRANS  ROUTINE                              * 0
*  NAME:     GEORGE ZHYLIN Z1810327                                   * 0
*                                                                     * 0
*  FUNCTION: ROUTINE GETS 4 ARGUMENTS, TABLE,EOT,RECORD AND PAGENUM   * 0
*            ROUTINE GOES THRU STANDARD ENTRY LINKAGE, THEN UNLOAD    * 0
*            PARAMETERS. THEN READS ALL THE TRANSACTIONS AND PROCESSES* 0
*            THEN, THAT INVOLVES CUSTOMER TABLE AND SOME COMPUTATION. * 0
*            AFTER ROUTINE DONE READING AND PROCESSING ALL THE TRANS  * 0
*            IT GOES THRU STANDARD EXIT LINKAGE AND EXIT              * 0
*                                                                     * 0
*  REGISTER USAGE:                                                    * 0
*  R1  = ARGUMENTS POINTER                                            * 0
*  R2  =                                                              * 0
*  R3  = TABLE POINTER                                                * 0
*  R4  = EOT POINTER                                                  * 0
*  R5  = BUFFER POINTER (RECORD)                                      * 0
*  R6  = PAGE NUM POINTER                                             * 0
*  R7  = COPY THE TABLE POINTER                                       * 0
*  R8  = PAGE NUMBER                                                  * 0
*  R9  =                                                              * 0
*  R10 =                                                              * 0
*  R11 = POINTER TO THE BEGINING OF THE TABLE                         * 0
*  R12 = BASE REGISTER                                                * 0
*  R13 = SUCCESSFUL TRANS COUNTER                                     * 0
*  R14 = EXIT                                                         * 0
*  R15 = SEARCH RESULT VALUE                                          * 0
*********************************************************************** 0
TRANS     CSECT                    TRANS ROUTINE                        0
***<STANDARD ENTRY LINKAGE FOR ROUTINE>***                              0
          STM   14,12,12(13)       SAVE ALL THE REGISTERS EXCEPT R13    0
          LR    12,15              PUT ADDRESS OF ROUTINE IN R12        0
          USING TRANS,12           SET R12 AS A BASE REGISTER FOR ROUT  0
          LA    14,SAVETRNS        SET POINTER TO ROUTINE SAVE AREA     0
          ST    13,4(14)           BACKWARD POINTER                     0
          ST    14,8(13)           FORWARD POINTER                      0
          LR    13,14              SET POINTER IN R13 TO ROUTINE        0
***<TRANS ROUTINE BODY>***                                              0
          LM    3,6,0(1)           UNLOAD ARGUMENTS IN R3,R4,R5,R6      0
          LR    7,3                PUT POINTER TO THE TABLE IN R7       0
          S     4,=F'1'            PUT CORRECT VALUE FOR EOT            0
          USING TABLEM,7           USE TABLEM DSECT IN R4               0
          USING INPUT2,5           USE INPUT2 DSECT IN R5               0
          LH    8,0(6)             GET PAGE NUM AND PUT IN R8 4 BYTES   0
          STH   8,PNUM             STORE PAGE NUM IN VAR PNUM 4 BYTES   0
          AP    PNUM,=PL1'1'       ADD 1 TO OUR PAGE COUNTER            0
          MVC   PRNTTP,=XL4'40202020'  FORMAT FOR OUTPUT                0
          ED    PRNTTP,PNUM        INSERT IN LABEL                      0
          XPRNT PRINT1,80          PRINT LINE                           0
          XPRNT PRINT2,80          PRINT LINE                           0
LOOP4     XREAD INPUT2,80          READ NEXT LINE                       0
          BC    B'0100',ENDT       IF EOF GO TO END LABEL               0
          LR    11,7               STORE POINTER TO THE BEG OF TAB      0
LOOP3     CR    7,4                CHECK IF EOT                         0
          BE    NFOUND             IF END OF TABLE GO TO THE NOT FOUND  0
          CLC   ID,IN2ID           LOOK FOR ID IN TABLE                 0
          BE    FOUND              IF FOUND GO TO FOUND                 0
          LA    7,33(7)            INCREMENT TABLE POINTER              0
          SR    10,10              GO BACK TO THE LOOP                  0
          BC    B'1111',LOOP3                                           0
NFOUND    AP    FAILTRAN,=PL4'1'   ADD 1 TO THE COUNTER                 0
          MVC   ERID,IN2ID         COPY SEARCHED ID IN LBL              0
          CLC   IN2TR,=CL1'W'      CHECK IF TRANS TYPE IS W             0
          BE    SETW               IF TYPE IS W THEN GO TO SETW         0
          CLC   IN2TR,=CL1'D'      CHECK IF TRANS TYPE IS D             0
          BE    SETD               IF TYPE IS D THEN GO TO SETD         0
          CLC   IN2TR,=CL1'B'      CHECK IF TRANS TYPE IS B             0
          BE    SETB               IF TYPE IS B THEN GO TO SETB         0
SETW      MVC   ERT,=CL13'Withdrawal   '                                0
          CR    10,10                                                   0
          BC    B'1111',NEXT                                            0
SETD      MVC   ERT,=CL13'Deposit      '                                0
          CR    10,10                                                   0
          BC    B'1111',NEXT                                            0
SETB      MVC   ERT,=CL13'Balance Query'                                0
          CR    10,10                                                   0
          BC    B'1111',NEXT                                            0
NEXT      PACK  SAVEPY,IN2PAY      PACK IN SAVEPY                       0
          LA    1,ERAM+6           INITIALIZE R1                        0
          MVC   ERAM,=XL10'4020206B2021204B2020'        FORMAT          0
          EDMK  ERAM,SAVEPY        INSERT IN LABEL                      0
          BCTR  1,0                SUBSTRACT 1 FROM R1                  0
          MVI   0(1),C'$'          INSERT $                             0
          PACK  SAVEDAY,IN2DAY     PACK THE DATE                        0
          MVC   ERDAY,=XL12'402020206120206120202020'      FORMAT       0
          EDMK  ERDAY,SAVEDAY      INSERT IN LABEL                      0
          XPRNT ERROR,80           PRINT ERROR LBL                      0
          LR    7,11               LOAD POINTER TO BEG OF THE TAB       0
          CR    10,10                                                   0
          BC    B'1111',LOOP4      GO BACK TO OUTER LOOP                0
FOUND     AP    SUCCTRAN,=PL4'1'   ADD 1 TO THE COUNTER                 0
*<DISPLAY TRANSACTION>*                                                 0
          MVC   TRANSID,IN2ID      COPY SEARCHED ID IN LBL              0
          CLC   IN2TR,=CL1'W'      CHECK IF TRANS TYPE IS W             0
          BE    SETW2              IF TYPE IS W THEN GO TO SETW         0
          CLC   IN2TR,=CL1'D'      CHECK IF TRANS TYPE IS D             0
          BE    SETD2              IF TYPE IS D THEN GO TO SETD         0
          CLC   IN2TR,=CL1'B'      CHECK IF TRANS TYPE IS B             0
          BE    SETB2              IF TYPE IS B THEN GO TO SETB         0
SETW2     MVC   TRANST,=CL13'Withdrawal   '                             0
          ZAP   SAVEPY2,=PL4'0'    RESET THE FILED                      0
          PACK  SAVEPY2,IN2PAY     PACK IN SAVEPY                       0
          LA    1,TRANSAM+6        INITIALIZE R1                        0
          MVC   TRANSAM,=XL10'4020206B2021204B2020'        FORMAT       0
          EDMK  TRANSAM,SAVEPY2    INSERT IN LABEL                      0
          BCTR  1,0                SUBSTRACT 1 FROM R1                  0
          MVI   0(1),C'$'          INSERT $                             0
          AP    BAL,SAVEPY2        ADD AMOUNT FROM THE TOTAL            0
          LA    1,TRANSB+6         INITIALIZE R1                        0
          MVC   TRANSB,=XL10'4020206B2021204B2020'         FORMAT       0
          EDMK  TRANSB,BAL         INSERT IN LABEL                      0
          BCTR  1,0                SUBSTRACT 1 FROM R1                  0
          MVI   0(1),C'$'          INSERT $                             0
          CP    BAL,=PL4'0'        CHECK IF BALANCE IS NEGATIVE         0
          BC    B'0100',GONEG1     IF BALANCE IS NEGATIVE THEN PRINT CR 0
          MVC   TRANSS,=CL2'  '    INSERT BLANK SPACE                   0
          CR    10,10                                                   0
          BC    B'1111',GONX1      IF BALANCE IS POSITIVE THEN GO NEXT  0
GONEG1    MVC   TRANSS,=CL2'CR'    INSERT CR IN THE LABEL               0
GONX1     ZAP   SAVEDAY,=PL5'0'    RESET THE FIELD                      0
          PACK  SAVEDAY,IN2DAY     PACK THE DATE                        0
          MVC   TRANSD,=XL12'402020206120206120202020'     FORMAT       0
          EDMK  TRANSD,SAVEDAY     INSERT IN LABEL                      0
          XPRNT TRANSM,80          PRINT OUT TRANSACTION MSG            0
          CR    10,10                                                   0
          BC    B'1111',NEXT2                                           0
SETD2     MVC   TRANST,=CL13'Deposit      '                             0
          ZAP   SAVEPY2,=PL4'0'    RESET THE FILED                      0
          PACK  SAVEPY2,IN2PAY     PACK IN SAVEPY                       0
          LA    1,TRANSAM+6        INITIALIZE R1                        0
          MVC   TRANSAM,=XL10'4020206B2021204B2020'        FORMAT       0
          EDMK  TRANSAM,SAVEPY2    INSERT IN LABEL                      0
          BCTR  1,0                SUBSTRACT 1 FROM R1                  0
          MVI   0(1),C'$'          INSERT $                             0
          SP    BAL,SAVEPY2        SUB AMOUNT FROM THE TOTAL            0
          LA    1,TRANSB+6         INITIALIZE R1                        0
          MVC   TRANSB,=XL10'4020206B2021204B2020'         FORMAT       0
          EDMK  TRANSB,BAL         INSERT IN LABEL                      0
          BCTR  1,0                SUBSTRACT 1 FROM R1                  0
          MVI   0(1),C'$'          INSERT $                             0
          CP    BAL,=PL4'0'        CHECK IF BALANCE IS NEGATIVE         0
          BC    B'0100',GONEG2     IF BALANCE IS NEGATIVE THEN PRINT CR 0
          MVC   TRANSS,=CL2'  '    INSERT BLANK SPACE                   0
          CR    10,10                                                   0
          BC    B'1111',GONX2      IF BALANCE IS POSITIVE THEN GO NEXT  0
GONEG2    MVC   TRANSS,=CL2'CR'    INSERT CR IN THE LABEL               0
GONX2     ZAP   SAVEDAY,=PL5'0'    RESET THE FIELD                      0
          PACK  SAVEDAY,IN2DAY     PACK THE DATE                        0
          MVC   TRANSD,=XL12'402020206120206120202020'     FORMAT       0
          EDMK  TRANSD,SAVEDAY     INSERT IN LABEL                      0
          XPRNT TRANSM,80          PRINT OUT TRANSACTION MSG            0
          CR    10,10                                                   0
          BC    B'1111',NEXT2                                           0
SETB2     MVC   TRANST,=CL13'Balance Query'                             0
          MVC   TRANSAM,=CL10'          '      BLANK SPACE FORMAT       0
          LA    1,TRANSB+6         INITIALIZE R1                        0
          MVC   TRANSB,=XL10'4020206B2021204B2020'         FORMAT       0
          EDMK  TRANSB,BAL         INSERT IN LABEL                      0
          BCTR  1,0                SUBSTRACT 1 FROM R1                  0
          MVI   0(1),C'$'          INSERT $                             0
          CP    BAL,=PL4'0'        CHECK IF BALANCE IS NEGATIVE         0
          BC    B'0100',GONEG3     IF BALANCE IS NEGATIVE THEN PRINT CR 0
          MVC   TRANSS,=CL2'  '    INSERT BLANK SPACE                   0
          CR    10,10                                                   0
          BC    B'1111',GONX3      IF BALANCE IS POSITIVE THEN GO NEXT  0
GONEG3    MVC   TRANSS,=CL2'CR'    INSERT CR IN THE LABEL               0
GONX3     ZAP   SAVEDAY,=PL5'0'    RESET THE FIELD                      0
          PACK  SAVEDAY,IN2DAY     PACK THE DATE                        0
          MVC   TRANSD,=XL12'402020206120206120202020'     FORMAT       0
          EDMK  TRANSD,SAVEDAY     INSERT IN LABEL                      0
          XPRNT TRANSM,80          PRINT OUT TRANSACTION MSG            0
          CR    10,10                                                   0
          BC    B'1111',NEXT2                                           0
NEXT2     LR    7,11               LOAD POINTER TO BEG OF THE TAB       0
          CR    10,10                                                   0
          BC    B'1111',LOOP4      GO BACK TO OUTER LOOP                0
***<STANDARD EXIT LINKAGE FOR ROUTINE>***                               0
ENDT      MVC   ST,=XL10'40404020202020202020'        FORMAT            0
          ED    ST,SUCCTRAN        INSERT IN LABEL                      0
          XPRNT SUMMS,35           PRINT SUM OF SUCCESSFUL TRANS        0
          MVC   FT,=XL10'40404020202020202020'        FORMAT            0
          ED    FT,FAILTRAN        INSERT IN LABEL                      0
          XPRNT SUMMF,35           PRINT SUM OF FAILED TRANS            0
          LH    9,PNUM             COPY PAGE COUNTER                    0
          STH   9,0(6)             STORE PAGE COUNTER                   0
          L     13,4(13)           SET R13 TO CALLERS SAVE AREA         0
          L     14,12(13)          RESTORE REGISTERS EXEPT 13 AND 15    0
          LM    0,12,20(13)                                             0
          BR    14                 EXIT                                 0
          LTORG                                                         0
***<STORAGE FOR TRANS ROUTINE>***                                       0
SUCCTRAN  DC    PL4'0'             TRANS SUCCESSFUL COUNTER             0
FAILTRAN  DC    PL4'0'             TRANS FAIL COUNTER                   0
SAVEID    DS    CL8                INPUT ID                             0
SAVETR    DS    CL1                INPUT TRANSACTION                    0
SAVEPY    DS    PL4                INPUT PAYMENT                        0
SAVEPY2   DS    PL4                TMP VAR TO HOLD FOUND TRANS BAL      0
SAVEBAL   DS    PL4                BALANCE TEMP SAVE                    0
SAVEDAY   DS    PL5                INPUT DATE                           0
SAVETRNS  DS    18F                REGISTERS STORAGE                    0
          DS    F                  TO ALIGN STORAGE                     0
PNUM      DS    PL2                PAGE NUM                             0
*<HEADER1>*                                                             0
PRINT1    DC    C'1'                                                    0
          DC    C'                              Transaction Report'     0
          DC    C'                       Page'                          0
PRNTTP    DS    CL4                                                     0
*<HEADER2>*                                                             0
PRINT2    DC    C'-   Customer ID     Transaction       Amount'         0
          DC    C'          Date            Balance   '                 0
*<ERROR MSG>*                                                           0
ERROR     DC    C'0Error! ID  '     ERROR FIELD LENGTH 80 BYTES         0
ERID      DS    CL8                 ERROR ID                            0
          DC    C' was not found for a '                                0
ERT       DS    CL13                ERROR TRANSACTION                   0
          DC    C' '                                                    0
ERAM      DS    CL10                ERROR AMOUNT                        0
          DC    C' on'                                                  0
ERDAY     DS    CL12                ERROR DATE                          0
*<TRANS MSG>*                                                           0
TRANSM    DC    C'0    '            CCC + SPACE           5             0
TRANSID   DS    CL8                                       8             0
          DC    C'     '            SPACE                 5             0
TRANST    DS    CL13                TRANS TYPE            13            0
          DC    C'     '            SPACE                 5             0
TRANSAM   DS    CL10                TRANS AMOUNT          10            0
          DC    C'     '            SPACE                 5             0
TRANSD    DS    CL12                TRANS DAYTE           12            0
          DC    C'    '             SAPCE                 4             0
TRANSB    DS    CL10                TRANS BALANCE         10            0
          DC    C' '                SPACE                 1             0
TRANSS    DS    CL2                 TRANS BALANCE SIGN    2             0
*<FOOTER1>*                                                             0
SUMMS     DC    C'1Successful transactions:'                            0
ST        DS    CL10                SUCCESSFUL TRANS LBL                0
*<FOOTER2>*                                                             0
SUMMF     DC    C'-Failed transactions:    '                            0
FT        DS    CL10                FAIL TRANS LBL                      0
***<END OF SEARCH ROUTINE>***                                           0
          END   MAIN                                                    0
*                                                                       0
*                                                                       0
*                                                                       0
*                                                                       0
/*                                                                      0
//FT05F001   DD  *                                                      0
Adams       Sharon      A162350S  0000000-  
Allen       Ronald      A760565R  0000174-  
Baker       Brian       B287543B  0023040+  
Campbell    George      C337711G  0009596+  
Carter      Susan       C909765S  0016133-  
Edwards     Sarah       E916021S  0000025-  
Evans       Charles     E098654C  0212093+  
Garcia      Kimberly    G678012K  0315153+  
Hall        Maria       H837651M  0045000+  
Harris      Jennifer    H876439J  0098071-  
Hill        Sarah       H234678S  0007500-  
Jones       Kimberly    J901345K  0000999-  
Lee         Kevin       L870811K  0156164+  
Lewis       Daniel      L132333D  0021456+  
Miller      Thomas      M825868T  0000000+  
Mitchell    Brian       M554644B  0037248+  
Moore       Sharon      M266757S  0001847+  
Perez       Sandra      P752778S  0000000+  
Phillips    Kenneth     P231035K  0000001-  
Robinson    Steven      R028106S  0003440+  
Scott       Paul        S926648P  0007673+  
Taylor      George      T589729G  0012081-  
Thomas      Mark        T437350M  0005327+  
Walker      Steven      W962623S  0012313+  
Williams    Ruth        W408954R  0023571+  
Wilson      Jeff        W875840J  0001123-  
Yanders     Humphrey    Y773405H  0000001+  
DONOTPUT    MEINTABLE   STOPHERE  0000000+  
M555555Q  W  9999999  29022017
J901345K  W  0050000  15122016
W962623S  D  0033322  02012017
L132333D  D  0099995  05112016
H876439J  B  0000000  12032917
S926648P  D  0001350  10012017
E098654C  W  0190954  02122016
Z000000Z  D  0050050  31032017
T589729G  W  0008699  30092016
W875840J  B  0000000  11032017
M266757S  D  0000999  14082015
C909765S  W  0003165  15122016
M554644B  D  0012799  25112016
G891034H  B  0000000  29022017
W408954R  D  0012700  29112016
X677893B  D  0001000  20122016
A162350S  W  0000001  23102016
M266757S  D  0000100  26102016
B287543B  B  0000000  01022016
B287543B  D  0000950  01122016
B287543B  B  0000000  01222016
Y773405H  B  0000000  12032017
Y773405H  D  0000001  12032017
Y773405H  B  0000000  12032017
H837651M  D  0019469  01102016
H837652M  W  0000001  01122016
W408954R  D  0015000  01032017
E098654C  W  0011999  21092016
P231035K  W  0013950  25112016
/*                                                                      
//FT06F001   DD SYSOUT=*                                                
//                                                                      